/**
 * This class is generated by jOOQ
 */
package com.rbkmoney.dudoser.domain.tables.records;


import com.rbkmoney.dudoser.domain.tables.Javaobject;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record3;
import org.jooq.Row3;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * Table for saving java objects
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.8.4"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class JavaobjectRecord extends UpdatableRecordImpl<JavaobjectRecord> implements Record3<Long, String, byte[]> {

    private static final long serialVersionUID = -1799888338;

    /**
     * Setter for <code>dudos.javaobject.id</code>.
     */
    public void setId(Long value) {
        set(0, value);
    }

    /**
     * Getter for <code>dudos.javaobject.id</code>.
     */
    public Long getId() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>dudos.javaobject.source_id</code>.
     */
    public void setSourceId(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>dudos.javaobject.source_id</code>.
     */
    public String getSourceId() {
        return (String) get(1);
    }

    /**
     * Setter for <code>dudos.javaobject.object</code>.
     */
    public void setObject(byte[] value) {
        set(2, value);
    }

    /**
     * Getter for <code>dudos.javaobject.object</code>.
     */
    public byte[] getObject() {
        return (byte[]) get(2);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Record1<Long> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record3 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row3<Long, String, byte[]> fieldsRow() {
        return (Row3) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row3<Long, String, byte[]> valuesRow() {
        return (Row3) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Long> field1() {
        return Javaobject.JAVAOBJECT.ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field2() {
        return Javaobject.JAVAOBJECT.SOURCE_ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<byte[]> field3() {
        return Javaobject.JAVAOBJECT.OBJECT;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long value1() {
        return getId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value2() {
        return getSourceId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public byte[] value3() {
        return getObject();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JavaobjectRecord value1(Long value) {
        setId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JavaobjectRecord value2(String value) {
        setSourceId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JavaobjectRecord value3(byte[] value) {
        setObject(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JavaobjectRecord values(Long value1, String value2, byte[] value3) {
        value1(value1);
        value2(value2);
        value3(value3);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached JavaobjectRecord
     */
    public JavaobjectRecord() {
        super(Javaobject.JAVAOBJECT);
    }

    /**
     * Create a detached, initialised JavaobjectRecord
     */
    public JavaobjectRecord(Long id, String sourceId, byte[] object) {
        super(Javaobject.JAVAOBJECT);

        set(0, id);
        set(1, sourceId);
        set(2, object);
    }
}
